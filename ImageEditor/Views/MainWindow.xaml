<Window x:Class="ImageEditor.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImageEditor"
        xmlns:vm="clr-namespace:ImageEditor.ViewModels"
        xmlns:utils="clr-namespace:ImageEditor.Utils"
        xmlns:components="clr-namespace:ImageEditor.Views.Components"
        xmlns:params="clr-namespace:ImageEditor.Models.Actions.Parameters"
        xmlns:zp="https://github.com/Moravuscz/WPFZoomPanel"
        xmlns:cpl="clr-namespace:ColorPickerLib.Controls;assembly=ColorPickerLib"
        mc:Ignorable="d"
        Title="ImageEditor" Height="720" Width="1280">

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <Window.Resources>
        <Style x:Key="NoHoverEffect" TargetType="{x:Type ListBoxItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="FloatParamTemplate"
                      DataType="{x:Type params:FloatParameter}">
            <StackPanel>
                <TextBlock Text="{Binding Description}" Margin="0,0,0,2" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="25" />
                    </Grid.ColumnDefinitions>

                    <Slider Grid.Column="0"
                            Minimum="{Binding MinValue}"
                            Maximum="{Binding MaxValue}"
                            Value="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            TickFrequency="1"
                            IsSnapToTickEnabled="True"
                            IsMoveToPointEnabled="True"
                            HorizontalAlignment="Stretch" />

                    <TextBox Grid.Column="1"
                             Margin="5,0,0,0"
                             HorizontalAlignment="Stretch"
                             Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </Grid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="EnumParamTemplate"
                      DataType="{x:Type params:EnumParameter}">
            <StackPanel>
                <TextBlock Text="{Binding Description}" Margin="0,0,0,2" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ComboBox Grid.Column="0"
                              ItemsSource="{Binding Options}"
                              SelectedValue="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              SelectedValuePath="Key" DisplayMemberPath="Value"
                              HorizontalAlignment="Stretch" />
                </Grid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ColorParamTemplate"
                      DataType="{x:Type params:ColorParameter}">
            <StackPanel>
                <TextBlock Text="{Binding Description}" Margin="0,0,0,2" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    
                    <Border BorderThickness="1" BorderBrush="Black">
                        <cpl:ColorPicker SelectedColor="{Binding Value}"
                                         Background="White"
                                         Resources="{StaticResource ColorPickerLib}"/>
                    </Border>
                </Grid>
            </StackPanel>
        </DataTemplate>

        <utils:InputTemplateSelector
            x:Key="InputTemplateSelector"
            FloatParamTemplate="{StaticResource FloatParamTemplate}"
            EnumParamTemplate="{StaticResource EnumParamTemplate}"
            ColorParamTemplate="{StaticResource ColorParamTemplate}" />
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel Name="ButtonGroup" Grid.Row="0" Orientation="Horizontal" Height="20">
                <Button Command="{Binding TogglePopupCommand}"
                        CommandParameter="{StaticResource True}"
                        Width="20" Height="20"
                        Margin="0,0,5,0"
                        Background="Transparent"
                        ToolTip="操作を追加する">
                    <Image Source="../Resources/plus.png" />
                </Button>

                <Popup PlacementTarget="{Binding ElementName=ButtonGroup}" Placement="Bottom"
                       HorizontalOffset="-35" VerticalOffset="-2"
                       IsOpen="{Binding IsPopupOpen}"
                       AllowsTransparency="True" StaysOpen="False"
                       Width="200" Height="180">
                    <Border Background="White" BorderBrush="Gray"
                            BorderThickness="1" CornerRadius="8"
                            Width="200" Height="180">
                        <ScrollViewer VerticalScrollBarVisibility="Auto"
                                      HorizontalScrollBarVisibility="Auto"
                                      Padding="2,5">
                            <ListBox ItemsSource="{Binding Actions}"
                                     BorderThickness="0"
                                     ItemContainerStyle="{StaticResource NoHoverEffect}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Width="180">
                                            <WrapPanel.Resources>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Margin" Value="3,0" />
                                                </Style>
                                            </WrapPanel.Resources>
                                        </WrapPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <Button Width="30" Height="30" Padding="4"
                                                    Background="Transparent"
                                                    Command="{Binding DataContext.AddActionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                    CommandParameter="{Binding Name}"
                                                    ToolTip="{Binding Path=Description}">
                                                <Image Source="{Binding Path=IconPath}" />
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </ScrollViewer>
                    </Border>
                </Popup>

                <Button Command="{Binding DeleteActionCommand}"
                        Width="20" Height="20"
                        Margin="0,0,5,0"
                        Background="Transparent"
                        ToolTip="選択した操作を削除する">
                    <Image Source="../Resources/minus.png" />
                </Button>
            </StackPanel>

            <ListBox Grid.Row="1" BorderThickness="2"
                     ItemsSource="{Binding AddedActions}"
                     SelectedItem="{Binding SelectedAction, Mode=OneWayToSource}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Expander>
                                <ListBox ItemsSource="{Binding Parameters}"
                                         ItemTemplateSelector="{StaticResource InputTemplateSelector}"
                                         ItemContainerStyle="{StaticResource NoHoverEffect}"
                                         Margin="-5,5,-5,-2"
                                         Padding="7,2,7,4"
                                         BorderThickness="0"
                                         HorizontalAlignment="Stretch">
                                </ListBox>
                            </Expander>
                            <TextBlock Text="{Binding FormatedString}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Height" Value="25" />
                                        <Setter Property="Margin" Value="21,0,0,0" />
                                        <Setter Property="Padding" Value="9,3,0,0" />
                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                        <Setter Property="VerticalAlignment" Value="Top" />
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

        </Grid>

        <Grid Grid.Row="0" Grid.Column="1" Margin="0,10,15,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Border Grid.Row="1" Grid.Column="0"
                    BorderThickness="2" BorderBrush="#FFABADB3">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <zp:ZoomPanelScrollViewer Grid.Column="0"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"
                                              ZoomAndPanInitialPosition="FitScreen">
                        <Image Margin="300"
                               Source="{Binding OriginalBitmapImage}" />
                    </zp:ZoomPanelScrollViewer>

                    <zp:ZoomPanelScrollViewer Grid.Column="1"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"
                                              ZoomAndPanInitialPosition="FitScreen">
                        <Image Margin="300"
                               Source="{Binding ProcessedBitmapImage}" />
                    </zp:ZoomPanelScrollViewer>

                    <Button Grid.Column="0" Grid.ColumnSpan="2"
                            Command="{Binding LoadImageCommand}"
                            Visibility="{Binding LoadImageCommandVisibility}">
                        クリック又はドラッグアンドドロップで画像を読み込む
                    </Button>
                </Grid>
            </Border>
        </Grid>
        
        <components:SidePanelFooter Grid.Row="1" Grid.Column="0" />
    </Grid>
</Window>