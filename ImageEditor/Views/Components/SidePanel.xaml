<UserControl x:Class="ImageEditor.Views.Components.SidePanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:ImageEditor.ViewModels"
             xmlns:utils="clr-namespace:ImageEditor.Utils"
             xmlns:components="clr-namespace:ImageEditor.Views.Components"
             xmlns:params="clr-namespace:ImageEditor.Models.Actions.Parameters"
             xmlns:cpl="clr-namespace:ColorPickerLib.Controls;assembly=ColorPickerLib"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             mc:Ignorable="d"
             d:DesignHeight="695" d:DesignWidth="250"
             d:DataContext="{d:DesignInstance vm:MainWindowViewModel}">

    <UserControl.Resources>
        <DataTemplate x:Key="ScaleParameterInputs">
            <Grid d:DataContext="{d:DesignInstance params:ScaleParameter}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="45" />
                    <ColumnDefinition Width="45" />
                </Grid.ColumnDefinitions>

                <Slider Grid.Column="0"
                        Minimum="1"
                        Maximum="100"
                        Value="{Binding Value.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        TickFrequency="1"
                        IsSnapToTickEnabled="True"
                        IsMoveToPointEnabled="True"
                        HorizontalAlignment="Stretch" />

                <TextBox Grid.Column="1"
                         Margin="5,0,0,0"
                         HorizontalAlignment="Stretch"
                         Text="{Binding Value.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

                <ComboBox Grid.Column="2"
                          Margin="5,0,0,0"
                          ItemsSource="{Binding Options}"
                          SelectedValue="{Binding Value.Type, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          SelectedValuePath="Key" DisplayMemberPath="Value"
                          HorizontalAlignment="Stretch" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="FloatParamTemplate"
                      DataType="{x:Type params:FloatParameter}">
            <StackPanel>
                <TextBlock Text="{Binding Description}" Margin="0,0,0,2" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="25" />
                    </Grid.ColumnDefinitions>

                    <Slider Grid.Column="0"
                            Minimum="{Binding MinValue}"
                            Maximum="{Binding MaxValue}"
                            Value="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            TickFrequency="{Binding StepValue}"
                            IsSnapToTickEnabled="True"
                            IsMoveToPointEnabled="True"
                            HorizontalAlignment="Stretch" />

                    <TextBox Grid.Column="1"
                             Margin="5,0,0,0"
                             HorizontalAlignment="Stretch"
                             Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </Grid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="IntParamTemplate"
                      DataType="{x:Type params:IntParameter}">
            <StackPanel>
                <TextBlock Text="{Binding Description}" Margin="0,0,0,2" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="25" />
                    </Grid.ColumnDefinitions>

                    <Slider Grid.Column="0"
                            Minimum="{Binding MinValue}"
                            Maximum="{Binding MaxValue}"
                            Value="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            TickFrequency="{Binding StepValue}"
                            IsSnapToTickEnabled="True"
                            IsMoveToPointEnabled="True"
                            HorizontalAlignment="Stretch" />

                    <TextBox Grid.Column="1"
                             Margin="5,0,0,0"
                             HorizontalAlignment="Stretch"
                             Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </Grid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="EnumParamTemplate"
                      DataType="{x:Type params:EnumParameter}">
            <StackPanel>
                <TextBlock Text="{Binding Description}" Margin="0,0,0,2" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ComboBox Grid.Column="0"
                              ItemsSource="{Binding Options}"
                              SelectedValue="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              SelectedValuePath="Key" DisplayMemberPath="Value"
                              HorizontalAlignment="Stretch" />
                </Grid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ColorParamTemplate"
                      DataType="{x:Type params:ColorParameter}">
            <StackPanel>
                <TextBlock Text="{Binding Description}" Margin="0,0,0,2" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Border BorderThickness="1" BorderBrush="Black">
                        <cpl:ColorPicker SelectedColor="{Binding Value}"
                                         Background="White"
                                         Resources="{StaticResource ColorPickerLib}" />
                    </Border>
                </Grid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ScaleParamTemplate"
                      DataType="{x:Type params:ScaleParameter}">
            <StackPanel>
                <TextBlock Text="{Binding Description}" Margin="0,0,0,2" />
                <ContentControl ContentTemplate="{StaticResource ScaleParameterInputs}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="WidthAndHeightParamTemplate"
                      DataType="{x:Type params:WidthAndHeightParameter}">
            <StackPanel>
                <TextBlock Text="{Binding Description}" Margin="0,0,0,2" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="25" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Grid.Column="0" Margin="0,0,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Text="{Binding Width.Description}" Margin="0,0,0,2" />
                        <ContentControl Grid.Column="1"
                                        ContentTemplate="{StaticResource ScaleParameterInputs}"
                                        Content="{Binding Width}" />
                    </Grid>

                    <Grid Grid.Row="1" Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Text="{Binding Height.Description}" Margin="0,0,0,2" />
                        <ContentControl Grid.Column="1"
                                        ContentTemplate="{StaticResource ScaleParameterInputs}"
                                        Content="{Binding Height}" />
                    </Grid>
                </Grid>
            </StackPanel>
        </DataTemplate>

        <utils:InputTemplateSelector
            x:Key="InputTemplateSelector"
            FloatParamTemplate="{StaticResource FloatParamTemplate}"
            IntParamTemplate="{StaticResource IntParamTemplate}"
            EnumParamTemplate="{StaticResource EnumParamTemplate}"
            ColorParamTemplate="{StaticResource ColorParamTemplate}"
            ScaleParamTemplate="{StaticResource ScaleParamTemplate}"
            WidthAndHeightParamTemplate="{StaticResource WidthAndHeightParamTemplate}" />
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel Name="ButtonGroup" Grid.Row="0" Orientation="Horizontal" Height="20">
            <Button Command="{Binding TogglePopupCommand}"
                    CommandParameter="{StaticResource True}"
                    Width="20" Height="20"
                    Margin="0,0,5,0"
                    Background="Transparent"
                    ToolTip="操作を追加する">
                <Image Source="../../Resources/plus.png" />
            </Button>

            <Popup PlacementTarget="{Binding ElementName=ButtonGroup}" Placement="Bottom"
                   HorizontalOffset="-35" VerticalOffset="-2"
                   IsOpen="{Binding IsPopupOpen}"
                   AllowsTransparency="True" StaysOpen="False"
                   Width="200" Height="180">
                <Border Background="White" BorderBrush="Gray"
                        BorderThickness="1" CornerRadius="8"
                        Width="200" Height="180">
                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                  HorizontalScrollBarVisibility="Auto"
                                  Padding="2,5">
                        <ListBox ItemsSource="{Binding Actions}"
                                 BorderThickness="0"
                                 ItemContainerStyle="{StaticResource NoHoverEffectStyle}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Width="180">
                                        <WrapPanel.Resources>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Margin" Value="3,0" />
                                            </Style>
                                        </WrapPanel.Resources>
                                    </WrapPanel>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <Button Width="30" Height="30" Padding="4"
                                                Background="Transparent"
                                                Command="{Binding DataContext.AddActionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                CommandParameter="{Binding Name}"
                                                ToolTip="{Binding Path=Description}">
                                            <Image Source="{Binding Path=IconPath}" />
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>
                </Border>
            </Popup>

            <Button Command="{Binding DeleteActionCommand}"
                    Width="20" Height="20"
                    Margin="0,0,5,0"
                    Background="Transparent"
                    ToolTip="選択した操作を削除する">
                <Image Source="../../Resources/minus.png" />
            </Button>
        </StackPanel>

        <ListBox Grid.Row="1" BorderThickness="2"
                 ItemsSource="{Binding AddedActions}"
                 SelectedItem="{Binding SelectedAction, Mode=OneWayToSource}"
                 dd:DragDrop.IsDragSource="True"
                 dd:DragDrop.IsDropTarget="True"
                 dd:DragDrop.DropHandler="{Binding ActionDragDropHandler}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Expander>
                            <ListBox ItemsSource="{Binding Parameters}"
                                     ItemTemplateSelector="{StaticResource InputTemplateSelector}"
                                     ItemContainerStyle="{StaticResource NoHoverEffectStyle}"
                                     Margin="-5,5,-5,-2"
                                     Padding="7,2,7,4"
                                     BorderThickness="0"
                                     HorizontalAlignment="Stretch">
                            </ListBox>
                        </Expander>
                        <TextBlock Text="{Binding FormatedString}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Height" Value="25" />
                                    <Setter Property="Margin" Value="21,0,0,0" />
                                    <Setter Property="Padding" Value="9,3,0,0" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalAlignment" Value="Top" />
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

    </Grid>
</UserControl>